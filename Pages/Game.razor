@page "/game"
@using System;
@using System.Timers;
@using Project_Tetris_cs.Data;
@using Project_Tetris_cs.Data.Piece;

@code {
    private bool dirty = false;
    Grid grid = new Grid(20, 10);
    Tetris tetrisPiece = new Tetris();
    private Timer timerToMoveShape = new Timer(1500);
    public bool placePiece(int indexRow, int indexColumn) {
        bool result = false;
        for (int indexshape = 0; indexshape < tetrisPiece.block.shape.Length; indexshape++) {
            if (grid.finallyGrid[indexRow, indexColumn] == tetrisPiece.block.shape[indexshape]) {
                result = true;
            }
        }
        return result;
    }

    public async void movePieceDownAsync() {
        @* Boucle infini *@
        while (true) {
            tetrisPiece.block.movePieceDown();
            @* StateHasChanged notifie le composant que son état a changé. *@
            this.StateHasChanged();
            @* Task.Delay fait office de timer *@
            await Task.Delay(1500);
        }
    }
}

<div class="title">
    <img src="/img/Tetris_Title.png">
</div>

<div class="phone_outline">
    <img class="phone" src="/img/iphone_x.png">
    <div class="background">
        <img class="background_b" src="/img/background.png">
        <div class="grid">
            <div class="tetris-container" tabindex="0">
                @for (int indexRow = grid.row-1; indexRow >= 0; indexRow--)
                {
                    <div class="tetris-row">
                        @for (int indexColumn = 0; indexColumn < grid.column; indexColumn++)
                        {
                            @if (placePiece(indexRow, indexColumn)) {
                                <td class="tetromino">@grid.finallyGrid[indexRow, indexColumn]</td>
                            } else {
                                <td class="notetromino">@grid.finallyGrid[indexRow, indexColumn]</td>
                            }
                        }
                    </div>
                }
            </div>
            
        </div>
    </div>
    <button type="submit" @onclick="@movePieceDownAsync" class="down">Jouer</button>
    <a href="/accueil"><img class="back" src="/img/BackBtn.png"></a>

    <div class="row">
        <div class="col">
            <div class="tetris-container" tabindex="0">
            </div>
        </div>
    </div>
</div>